divide2.hex
str(divide2.hex)
divide2[1]/divide2[2]
divide2.hex[1]/divide2.hex[2]
divide
library(h2o)
h2o.init()
?h2o.runif
test = h2o.importFile("https://s3.amazonaws.com/h2o-public-test-data/smalldata/junit/cars_20mpg.csv")
h2o.runif(test,seed=1)
source('~/Desktop/private-cvs-response/analysis/LoadData.R')
#Set working directory
#setwd("~/Desktop/private-cvs-response")
#Read in Data
#Load up libraries
library(data.table)
#Read in data:
df = fread("CLAIMS_SURVEILLANCE_DATA.TXT")
drug_ref = fread("DRUG_REFERENCE.TXT")
#Conduct a left join between CLAIMS_SURVEILLANCE_DATA.TXT & DRUG_REFERENCE.TXT
#According to CVS: 'The Reference Data File has the drug reference data. This file can be linked to Claims Data File using DRUG_PROD_GID'
setkey(df,"DRUG_PROD_GID")
setkey(drug_ref,"DRUG_PROD_GID")
df = merge(df,drug_ref,by="DRUG_PROD_GID",all.x=TRUE)
setwd("~/Desktop/private-cvs-response")
#Set working directory
#setwd("~/Desktop/private-cvs-response")
#Read in Data
#Load up libraries
library(data.table)
#Read in data:
df = fread("CLAIMS_SURVEILLANCE_DATA.TXT")
drug_ref = fread("DRUG_REFERENCE.TXT")
#Conduct a left join between CLAIMS_SURVEILLANCE_DATA.TXT & DRUG_REFERENCE.TXT
#According to CVS: 'The Reference Data File has the drug reference data. This file can be linked to Claims Data File using DRUG_PROD_GID'
setkey(df,"DRUG_PROD_GID")
setkey(drug_ref,"DRUG_PROD_GID")
df = merge(df,drug_ref,by="DRUG_PROD_GID",all.x=TRUE)
table(df[,.(INVOKE_EDIT_CD)])
df = df[ !(INVOKE_EDIT_CD %in% c("8","B","N","R"," ", "*"))]
table(df[,.(INVOKE_EDIT_CD)])
df = df[ !(INVOKE_EDIT_CD %in% c("8","B","N","R","", "*"))]
table(df[,.(INVOKE_EDIT_CD)])
df[, FormularyFlag := ifelse(INVOKE_EDIT_CD %in% c("c","E","F","G","i","K","n","z","j","P"),1,0)]
head(df)
table(df[,.(FormularyFlag)])
table(df[,.(EDIT_TYP_PRECERT_IND)])
pa_indicator = df[,.(pa_indicator = ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)),
by=.(LVL1_ACCT_GID,LVL3_ACCT_GID,FILL_DT)]
pa_indicator
pa_indicator = df[,.(pa_indicator = sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0))),
by=.(LVL1_ACCT_GID,LVL3_ACCT_GID,FILL_DT)]
pa_indicator
pa_indicator = df[,.(pa_indicator = ifelse(sum(EDIT_TYP_PRECERT_IND == "Y",1,0) > 0, "Y","N")),
by=.(LVL1_ACCT_GID,LVL3_ACCT_GID,FILL_DT)]
pa_indicator
pa_indicator = df[,.(pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")),
by=.(LVL1_ACCT_GID,LVL3_ACCT_GID,FILL_DT)]
pa_indicator
source('~/Desktop/private-cvs-response/analysis/ImputedBenefitPlan.R')
generic_mail_copay
head(df[,.(FRMLY_ID)])
sum(df[,.(FRMLY_ID == "NA")])
sum(df[,.(FRMLY_ID == NA)])
frmly_id = df[,.(FRMLY_ID = sum(ifelse(is.na(FRMLY_ID),1,0))),
by=.(LVL1_ACCT_GID,LVL3_ACCT_GID,FILL_DT)]
frmly_id
frmly_id = df[,.(frmly_id_year = sum(ifelse(is.na(FRMLY_ID),1,0))),
by=.(LVL1_ACCT_GID,LVL3_ACCT_GID,FILL_DT)]
frmly_id = df[,.(frmly_id_year = sum(ifelse(is.na(FRMLY_ID),0,1))),
by=.(LVL1_ACCT_GID,LVL3_ACCT_GID,FILL_DT)]
frmly_id
sum(is.na(df[,.(FRMLY_ID)]))
sum(!(is.na(df[,.(FRMLY_ID)])))
sum(frmly_id[,.(frmly_id_year)])
mail_benefit_indicator_v2 = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0))),
by=.(FRMLY_ID,FILL_DT)]
mail_benefit_indicator_v2
source('~/Desktop/private-cvs-response/analysis/ImputedBenefitPlanV2.R')
pa_indicator_v2
table(pa_indicator_v2[,.(pa_indicator)])
head(df[,(FRMLY_ID,DRUG_TYP_CD)])
head(df[,.(FRMLY_ID,DRUG_TYP_CD)])
table(df[,.(DRUG_TYP_CD)])
imputed_formulary = df[,.(DRUG_TYP_CD),
by=.(FRMLY_ID,FILL_DT)]
imputed_formulary
head(df[,.(DRUG_CLS_ID.y)])
table(df[,.(DRUG_CLS_ID.y)])
table(df[,.(DRUG_CLS_ID.x)])
imputed_formulary = df[DRUG_TYPE_CD != "" & FRMLY_ID != "NA",.(DRUG_TYP_CD, DRUG_CLS_ID.y),
by=.(FRMLY_ID,FILL_DT)]
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(DRUG_TYP_CD, DRUG_CLS_ID.y),
by=.(FRMLY_ID,FILL_DT)]
imputed_formulary
head(drug_ref)
colnames(durg_ref)
colnames(drug_ref)
setwd("~/Desktop/Kaggle/bimbo/data")
bimbo = fread("train.csv")
head(bimbo)
hist(bimbo$Demanda_uni_equil)
summary(bimbo[,.(Demanda_uni_equil)])
colnames = c('WeekNum', 'DepotId', 'ChannelId', 'RouteId', 'ClientId',
'ProductId', 'SalesUnitsWeek', 'SalesPesosWeek',
'ReturnsUnitsWeek', 'ReturnsPesosWeek', 'AdjDemand')
colnames
colnames(bimbo) = colnames
head(bimbo)
table(bimbo[,.(WeekNum)])
median_agg = bimbo[,.(median_demand = median(AdjDemand)),
by=.(ProductId,ClientId)]
str(bimbo)
str(bimbo$ProductId)
str(bimbo$ClientId)
median_agg = bimbo[,.(median_demand = as.double(median(AdjDemand))),
by=.(ProductId,ClientId)]
median_arg
median_agg
max(median_agg$median_demand)
rm(median_agg)
rm(bimbo)
ls
imputed_formulary
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(ndc = DRUG_TYP_CD, drug_class = DRUG_CLS_ID.y),
by=.(FRMLY_ID,FILL_DT)]
imputed_formulary
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(ndc = DRUG_TYP_CD, drug_class = DRUG_CLS_ID.y, pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")),
by=.(FRMLY_ID,FILL_DT)]
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(
ndc = DRUG_TYP_CD,
drug_class = DRUG_CLS_ID.y,
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
formulary_status = ifelse(FormularyFlag == 0,"On","Off")),
by=.(FRMLY_ID,FILL_DT)]
imputed_formulary
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(
ndc = DRUG_TYP_CD,
drug_class = DRUG_CLS_ID.y,
#gpi8 = ,
formulary_status = ifelse(FormularyFlag == 1,"On","Off")),
#formulary_mix = ,
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
by=.(FRMLY_ID,FILL_DT)]
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(
ndc = DRUG_TYP_CD,
drug_class = DRUG_CLS_ID.y,
#gpi8 = ,
formulary_status = ifelse(FormularyFlag == 1,"On","Off"),
#formulary_mix = ,
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")),
by=.(FRMLY_ID,FILL_DT)]
imputed_formulary
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(
ndc = DRUG_TYP_CD,
drug_class = DRUG_CLS_ID.y,
gpi8 = GPI8_CD ,
formulary_status = ifelse(FormularyFlag == 1,"On","Off"),
#formulary_mix = ,
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")),
by=.(FRMLY_ID,FILL_DT)]
imputed_formulary
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(
ndc = DRUG_TYP_CD,
drug_class = DRUG_CLS_ID.y,
gpi8 = GPI8_CD ,
formulary_status = ifelse(FormularyFlag == 1,"On","Off"),
formulary_mix = sum(FormularyFlag == 1)/nrow(df),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")),
by=.(FRMLY_ID,FILL_DT)]
imputed_formulary
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(
ndc = DRUG_TYP_CD,
drug_class = DRUG_CLS_ID.y,
gpi8 = GPI8_CD ,
formulary_status = ifelse(FormularyFlag == 1,"On","Off"),
#formulary_mix = sum(FormularyFlag == 1)/nrow(df),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")),
by=.(FRMLY_ID,FILL_DT)]
source('~/Desktop/private-cvs-response/analysis/LoadData.R')
setwd("~/Desktop/private-cvs-response")
source('~/Desktop/private-cvs-response/analysis/LoadData.R')
source('~/Desktop/private-cvs-response/analysis/ImputedBenefitPlanV2.R')
mail_benefit_indicator_v2
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(
ndc = DRUG_TYP_CD,
drug_class = DRUG_CLS_ID.y,
gpi8 = GPI8_CD ,
formulary_status = ifelse(FormularyFlag == 1,"On","Off"),
#formulary_mix = sum(FormularyFlag == 1)/nrow(df),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")),
by=.(FRMLY_ID,FILL_DT)]
imputed_formulary
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(
drug_class = DRUG_CLS_ID.y,
gpi8 = GPI8_CD ,
formulary_status = ifelse(FormularyFlag == 1,"On","Off"),
#formulary_mix = sum(FormularyFlag == 1)/nrow(df),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")),
by=.(FRMLY_ID,FILL_DT,DRUG_PROD_GID)]
imputed_formulary
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(
formulary_status = ifelse(FormularyFlag == 1,"On","Off"),
#formulary_mix = sum(FormularyFlag == 1)/nrow(df),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")),
by=.(FRMLY_ID, FILL_DT, DRUG_PROD_GID, gpi8 = GPI8_CD, drug_class = DRUG_CLS_ID.y)]
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(
formulary_status = mean(FormularyFlag),.N,
#formulary_mix = sum(FormularyFlag == 1)/nrow(df),
pa_indicator = mean((EDIT_TYP_PRECERT_IND == "Y"))),
by=.(FRMLY_ID, FILL_DT, DRUG_PROD_GID, gpi8 = GPI8_CD, drug_class = DRUG_CLS_ID.y)]
imputed_formulary
summary(imputed_formulary[,.(formulary_status)])
summary(imputed_formulary[,.(pa_indicator)])
imputed_formulary[pa_indicator>0 & pa_indicator<1]
imputed_formulary
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(
.N,
formulary_status = mean(FormularyFlag),
formulary_mix = sum(FormularyFlag == 1)/nrow(df),
pa_indicator = mean((EDIT_TYP_PRECERT_IND == "Y"))),
by=.(FRMLY_ID, FILL_DT, DRUG_PROD_GID, GPI8_CD, drug_class = DRUG_CLS_ID.y)]
imputed_formulary
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(
.N,
formulary_status = mean(FormularyFlag),
total_formulary = sum(FormularyFlag == 1),
formulary_mix = sum(FormularyFlag == 1)/nrow(df),
pa_indicator = mean((EDIT_TYP_PRECERT_IND == "Y"))),
by=.(FRMLY_ID, FILL_DT, DRUG_PROD_GID, GPI8_CD, drug_class = DRUG_CLS_ID.y)]
imputed_formulary
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(
.N,
formulary_status = mean(FormularyFlag),
total_formulary = sum(FormularyFlag),
formulary_mix = sum(FormularyFlag == 1)/nrow(df),
pa_indicator = mean((EDIT_TYP_PRECERT_IND == "Y"))),
by=.(FRMLY_ID, FILL_DT, DRUG_PROD_GID, GPI8_CD, drug_class = DRUG_CLS_ID.y)]
imputed_formulary
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(
.N,
formulary_status = mean(FormularyFlag),
total_formulary = sum(FormularyFlag),
formulary_mix = sum(FormularyFlag == 1)/.N,
pa_indicator = mean((EDIT_TYP_PRECERT_IND == "Y"))),
by=.(FRMLY_ID, FILL_DT, DRUG_PROD_GID, GPI8_CD, drug_class = DRUG_CLS_ID.y)]
imputed_formulary
summary(imputed_formulary[,.(formulary_mix)])
imputed_formulary = df[DRUG_TYP_CD != "" & FRMLY_ID != "NA",.(
.N,
formulary_status = mean(FormularyFlag),
total_formulary = sum(FormularyFlag == 1),
formulary_mix = sum(FormularyFlag == 1)/.N,
pa_indicator = mean((EDIT_TYP_PRECERT_IND == "Y"))),
by=.(FRMLY_ID, FILL_DT, DRUG_PROD_GID, GPI8_CD, drug_class = DRUG_CLS_ID.y)]
imputed_formulary
imputed_formulary
hist(brand_mail_coins_v2[,.(coins_brand_mail)])
class(brand_mail_coins_v2[,.(coins_brand_mail)])
head(brand_mail_coins_v2[,.(coins_brand_mail)])
is.numeric(brand_mail_coins_v2[,.(coins_brand_mail)])
is.numeric(brand_mail_coins_v2$coins_brand_mail)
hist(brand_mail_coins_v2$coins_brand_mail
)
generic_mail_copay_v2
test  = cbdin(generic_mail_copay_v2,generic_retail_copay_v2)
test  = cbind(generic_mail_copay_v2,generic_retail_copay_v2)
test
rm(test)
?cbind
generic_mail_coins_v2
source('~/Desktop/Kaggle/bimbo/analysis/analysis.R')
setwd("~/Desktop/Kaggle/bimbo/analysis")
source('~/Desktop/Kaggle/bimbo/analysis/analysis.R')
head(submit)
source('~/Desktop/Kaggle/bimbo/analysis/analysis.R')
head(submit)
rm(submit)
rm(test)
rm(train    )
rm(median)
rm(median_Prod)
rm(median_Client_Prod)
brand_mail_copay_v2
hist(brand_mail_copay_v2$copay_brnd_mail)
hist(generic_mail_copay_v2$copay_brnd_mail)
hist(generic_mail_copay_v2$copay_gnrc_mail)
hist(generic_retail_copay_v2$copay_gnrc_mail)
hist(generic_mail_copay_v2$copay_brnd_mail)
hist(generic_retail_copay_v2$copay_gnrc_mail)
hist(generic_retail_copay_v2$copay_gnrc_mail)
hist(generic_mail_copay_v2$copay_gnrc_mail)
hist(generic_retail_copay_v2$copay_gnrc_mail)
ggplot(brand_mail_copay_v2$copay_brnd_mail)
install.packages("ggplot2")
ggplot(brand_mail_copay_v2$copay_brnd_mail)
library(ggplot2)
ggplot(brand_mail_copay_v2$copay_brnd_mail)
ggplot(brand_mail_copay_v2$copay_brnd_mail) + geom_histogram()
ggplot() + aes(brand_mail_copay_v2$copay_brnd_mail)+ geom_histogram(binwidth=1, colour="black", fill="white")
head(df)
brand_mail_coins_v2
hist(brand_mail_coins_v2$coins_brand_mail)
drug_ref
cvs_1 = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0))),
(pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")),
by=.(FRMLY_ID,FILL_DT)]
cvs_1 = df[, mail_benefit_indicator := sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator := ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
by=.(FRMLY_ID,FILL_DT)]
cvs_1 = df[, mail_benefit_indicator := sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
#pa_indicator := ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
by=.(FRMLY_ID,FILL_DT)]
cvs_1
rm(cvs_1)
cvs_1 = df[,.(mail_benefit_indicator := sum(ifelse(DLVRY_SYSTM_CD=="M",1,0))),
.(pa_indicator := ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")),
by=.(FRMLY_ID,FILL_DT)]
cvs_1 = df[,`:=`(mail_benefit_indicator := sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)), pa_indicator := ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")), by=.(FRMLY_ID,FILL_DT)]
cvs_1 = df[,:=(mail_benefit_indicator := sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)), pa_indicator := ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")), by=.(FRMLY_ID,FILL_DT)]
cvs_1 = df[,.(mail_benefit_indicator := sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)), pa_indicator := ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")), by=.(FRMLY_ID,FILL_DT)]
is.data.table(df)
cvs_1 = df[,.mail_benefit_indicator := sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)), pa_indicator := ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"), by=.(FRMLY_ID,FILL_DT)]
cvs_1 = df[,.mail_benefit_indicator := sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)), pa_indicator := ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"), by=list(FRMLY_ID,FILL_DT)]
cvs_1 = df[,.mail_benefit_indicator := sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)), pa_indicator := ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"), by=FRMLY_ID]
cvs_1 = df[,mail_benefit_indicator := sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)), pa_indicator := ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"), by=FRMLY_ID]
cvs_1 = df[,mail_benefit_indicator `:=` sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)), pa_indicator `:=` ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"), by=FRMLY_ID]
cvs_1 = df[,.(mail_benefit_indicator := sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)), pa_indicator := ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")), by=FRMLY_ID]
cvs_1 = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)), pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")), by=FRMLY_ID]
cvs_1
cvs_1 = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)), pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")), by=.(FRMLY_ID,FILL_DT)]
cvs_1
pa_indicator_v2
table(df$EDIT_TYP_PRECERT_IND)
cvs_1 = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = median(MBR_FLAT_COPAY_AMT)),
by=.(FRMLY_ID,FILL_DT)]
cvs_1
#Combine the previous into one super set:
cvs_1 = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = ifelse(DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0,median(MBR_FLAT_COPAY_AMT),"NA")),
by=.(FRMLY_ID,FILL_DT)]
head(cvs_1)
cvs_1 = df[FRMLY_ID != "NA",.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = ifelse(DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0,median(MBR_FLAT_COPAY_AMT),"NA")),
by=.(FRMLY_ID,FILL_DT)]
head(cvs_1)
head(df)
df[, mail_benefit_indicator := sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)), by=list(FRMLY_ID,FILL_DT)]
test = df[, mail_benefit_indicator := sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)), by=list(FRMLY_ID,FILL_DT)]
test
test = df[, mail_benefit_indicator := sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)), by=.(FRMLY_ID,FILL_DT)]
head(test)
test = df[, mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)), by=.(FRMLY_ID,FILL_DT)]
test = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0))), by=.(FRMLY_ID,FILL_DT)]
test
test = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N")), by=.(FRMLY_ID,FILL_DT)]
test
median(0)
test = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = ifelse(DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0,median(MBR_FLAT_COPAY_AMT),0)),
by=.(FRMLY_ID,FILL_DT)]
test = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = ifelse(DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0,1,0)),
by=.(FRMLY_ID,FILL_DT)]
test = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = ifelse(sum(ifelse(DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0)),1,0)),
by=.(FRMLY_ID,FILL_DT)]
test = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = if (DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT) 1 else 0),
by=.(FRMLY_ID,FILL_DT)]
test
test = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = ifelse((DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0),1,0)),
by=.(FRMLY_ID,FILL_DT)]
test = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = ifelse((DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0),median(copay_gnrc_mail),median(0))),
by=.(FRMLY_ID,FILL_DT)]
test = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = ifelse((DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0),median(MBR_FLAT_COPAY_AMT),median(0))),
by=.(FRMLY_ID,FILL_DT)]
test = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = median(MBR_FLAT_COPAY_AMT)),
by=.(FRMLY_ID,FILL_DT)]
test
test = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = median(MBR_FLAT_COPAY_AMT)[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0]),
by=.(FRMLY_ID,FILL_DT)]
test
generic_mail_copay_v2
generic_mail_copay_v2[FRMLY_ID == "539" & FILL_DT ==1]
test[FRMLY_ID == "539" & FILL_DT ==1]
test[FRMLY_ID == "539" & FILL_DT ==1 & copay_gnrc_mail == 10]
test
test = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = median(MBR_FLAT_COPAY_AMT)),
by=.(FRMLY_ID,FILL_DT)]
test[FRMLY_ID == "539" & FILL_DT ==1]
test = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0])),
by=.(FRMLY_ID,FILL_DT)]
test
test[FRMLY_ID == "539" & FILL_DT ==1]
generic_mail_copay_v2[FRMLY_ID == "539" & FILL_DT ==1]
test = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0]),
copay_gnrc_retail =  median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="R" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0]),
copay_brnd_mail = median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "BRND" & MBR_FLAT_COPAY_AMT > 0 & FormularyFlag == 1])),
by=.(FRMLY_ID,FILL_DT)]
test = df[,.(mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
copay_gnrc_mail = median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0]),
copay_gnrc_retail =  median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="R" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0]),
copay_brnd_mail_frm = median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "BRND" & MBR_FLAT_COPAY_AMT > 0 & FormularyFlag == 1]),
copay_brnd_retail_frm = median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="R" & BRND_GNRC_CD == "BRND" & MBR_FLAT_COPAY_AMT > 0 & FormularyFlag == 1]),
copay_brnd_mail_nf = median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "BRND" & MBR_FLAT_COPAY_AMT > 0 & FormularyFlag == 0]),
copay_brnd_retail_nf = median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="R" & BRND_GNRC_CD == "BRND" & MBR_FLAT_COPAY_AMT > 0 & FormularyFlag == 0]),
coins_gnrc_mail = median(MBR_COINS_AMT[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC"& MBR_COINS_AMT > 0]),
coins_gnrc_retail = median(MBR_COINS_AMT[DLVRY_SYSTM_CD=="R" & BRND_GNRC_CD == "GNRC"& MBR_COINS_AMT > 0]),
coins_brand_mail_frm = median(MBR_COINS_AMT[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "BRND"& MBR_COINS_AMT > 0]),
coins_brand_retail_frm = median(MBR_COINS_AMT[DLVRY_SYSTM_CD=="R" & BRND_GNRC_CD == "BRND" & MBR_COINS_AMT > 0]),
coins_brand_mail_nf = median(MBR_COINS_AMT[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "BRND"& MBR_COINS_AMT > 0 & FormularyFlag == 0]),
coins_brand_retail_nf = median(MBR_COINS_AMT[DLVRY_SYSTM_CD=="R" & BRND_GNRC_CD == "BRND" & MBR_COINS_AMT > 0 & FormularyFlag == 0])),
by=.(FRMLY_ID,FILL_DT)]
test
imputed_benefits_plan_v1 = df[,.(
#a. Mail Benefit Indicator
mail_benefit_indicator = sum(ifelse(DLVRY_SYSTM_CD=="M",1,0)),
#b. Existence of PA restrictions (Y or N)
pa_indicator = ifelse(sum(ifelse(EDIT_TYP_PRECERT_IND == "Y",1,0)) > 0, "Y","N"),
#c. Generic by Mail Copay
copay_gnrc_mail = median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0]),
#d. Generic by Retail Copay
copay_gnrc_retail =  median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="R" & BRND_GNRC_CD == "GNRC" & MBR_FLAT_COPAY_AMT > 0]),
#e. Brand Formulary by Mail Copay
copay_brnd_mail_frm = median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "BRND" & MBR_FLAT_COPAY_AMT > 0 & FormularyFlag == 1]),
#f. Brand Formulary by Retail Copay
copay_brnd_retail_frm = median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="R" & BRND_GNRC_CD == "BRND" & MBR_FLAT_COPAY_AMT > 0 & FormularyFlag == 1]),
#g. Brand NF(Non Formulary) by Mail Copay
copay_brnd_mail_nf = median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "BRND" & MBR_FLAT_COPAY_AMT > 0 & FormularyFlag == 0]),
#h. Brand NF(Non Formulary) by Retail Copay
copay_brnd_retail_nf = median(MBR_FLAT_COPAY_AMT[DLVRY_SYSTM_CD=="R" & BRND_GNRC_CD == "BRND" & MBR_FLAT_COPAY_AMT > 0 & FormularyFlag == 0]),
#i. Generic by Mail Coinsurance
coins_gnrc_mail = median(MBR_COINS_AMT[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "GNRC"& MBR_COINS_AMT > 0]),
#j. Generic by Retail Coinsurance
coins_gnrc_retail = median(MBR_COINS_AMT[DLVRY_SYSTM_CD=="R" & BRND_GNRC_CD == "GNRC"& MBR_COINS_AMT > 0]),
#k. Brand Formulary by Mail Coinsurance
coins_brand_mail_frm = median(MBR_COINS_AMT[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "BRND"& MBR_COINS_AMT > 0]),
#l. Brand Formulary by Retail Coinsurance
coins_brand_retail_frm = median(MBR_COINS_AMT[DLVRY_SYSTM_CD=="R" & BRND_GNRC_CD == "BRND" & MBR_COINS_AMT > 0]),
#m. Brand NF(Non Formulary) by Mail Coinsurance
coins_brand_mail_nf = median(MBR_COINS_AMT[DLVRY_SYSTM_CD=="M" & BRND_GNRC_CD == "BRND"& MBR_COINS_AMT > 0 & FormularyFlag == 0]),
#n. Brand NF(Non Formulary) by Retail Coinsurance
coins_brand_retail_nf = median(MBR_COINS_AMT[DLVRY_SYSTM_CD=="R" & BRND_GNRC_CD == "BRND" & MBR_COINS_AMT > 0 & FormularyFlag == 0])),
by=.(LVL1_ACCT_GID,LVL3_ACCT_GID,FILL_DT)]
imputed_benefits_plan_v1
source('~/Desktop/private-cvs-response/analysis/ImputedFormulary.R')
imputed_formulary
summary(imputed_formulary$rt_formulary_status)
summary(imputed_formulary$rt_pa_indicator)
hist(imputed_formulary$rt_formulary_status)
hist(imputed_formulary$rt_pa_indicator)
hist(imputed_formulary$rt_formulary_status)
hist(imputed_formulary$rt_pa_indicator)
par(mfrow = c(1,1))
hist(imputed_formulary$rt_formulary_status)
hist(imputed_formulary$rt_pa_indicator)
par(mfrow=c(2,1))
hist(imputed_formulary$rt_pa_indicator)
hist(imputed_formulary$rt_formulary_status)
imputed_formulary
summary(imputed_formulary$rt_pa_indicator)
summary(imputed_formulary$rt_formulary_status)
table(imputed_formulary$rt_pa_indicator)
imputed_formulary
df[, formulary_rate := mean(FormularyFlag == 1), pa_rate := mean(EDIT_TYP_PRECERT_IND == "Y")]
df[,.(formulary_rate := mean(FormularyFlag == 1), pa_rate := mean(EDIT_TYP_PRECERT_IND == "Y"))]
df[,.(formulary_rate := mean(FormularyFlag == 1))]
mean(df[,.(FormularyFlag)])
head(df[,.(FormularyFlag)])
mean(df$FormularyFlag)
imputed_formulary
imputed_formulary
library(h2o)
h2o.init()
# The following two commands remove any previously installed H2O packages for R.
if ("package:h2o" %in% search()) { detach("package:h2o", unload=TRUE) }
if ("h2o" %in% rownames(installed.packages())) { remove.packages("h2o") }
# Next, we download packages that H2O depends on.
pkgs <- c("methods","statmod","stats","graphics","RCurl","jsonlite","tools","utils")
for (pkg in pkgs) {
if (! (pkg %in% rownames(installed.packages()))) { install.packages(pkg) }
}
# Now we download, install and initialize the H2O package for R.
install.packages("h2o", type="source", repos=(c("http://h2o-release.s3.amazonaws.com/h2o/rel-turchin/9/R")))
library(h2o)
library(h2o)
